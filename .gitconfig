[user]
  name = Ross Lonstein
  email = rlonstein+github@pobox.com

[rebase]
  autosquash = true

[merge]
  summary = true

[core]
  filemode = false
  editor = mg
	excludesfile = /Users/lonstein/.gitignore_global


[color]
  ui = false


[alias]
  # emit an alias if given one, else pretty prints all aliases
  alias       = "! sh -c 'case $# in \
                      0) git config --get-regexp \"^alias\\.\" \
                          | sort | sed \"s/^alias\\.//; s/=/ /\" \
                          | while read n v; do \
                             printf \"%-16s\" \"$n\"; \
                             echo \"$v\" | fmt -sw 63 | sed \"2,$ s/^/\t\t/\" ;\
                          done ;; \
                      1) git config --get-regexp \"^alias.$1.*\" ;; esac' -"

  whois = "!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=\"$1\"' -"

  whatis = "show -s --pretty='format:%h (%s, %ad)' --date=short"

  one = "show -s --pretty='format:%h (%s)'"

  find = "!find . -path './.git' -prune -o -print"

  ls = ls-files

  b = "branch -vv"

  rv = "remote -v"

  t = "tag -l"

  l = "log"

  k = "!gitk --all"

  lasttag = "describe --tags"

  save = "!git add -A && git commit -m'SAVE: Review/Refactor this later'"

  undo = "reset HEAD~1 --mixed"

  unstage = "reset HEAD"

  wipe = "!git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard"

  uncommit = "reset --soft HEAD^"

  amend = "commit -a --amend"

  export = "!sh -x -c 'GIT_WORK_TREE=\"$2\" git checkout -f \"$1\"'"

  savebranch = "!sh -c \"git branch $1 && \
                        git reset --hard HEAD~$2 && \
                        git checkout $1\""

  abandonmerge = "!sh -c 'git reset --hard HEAD && \
                           git fetch origin && \
                           git reset --hard origin'"

  testmerge = "!sh -c \"git merge-tree `git merge-base FETCH_HEAD $1` FETCH_HEAD $1\""

  ready = rebase --interactive --autosquash @{u}. @{u}

  lg = log --graph --pretty=format:'%Cred%h%Creset -%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'

  standup = log --pretty=format:'%Cred%h%Creset -%Creset %s %Cgreen(%cD) %C(bold blue)<%an>%Creset' --since yesterday --author lonstein

  purr = pull --rebase

  tag2branch = "!sh -c \"git checkout -b branch/$1 $1\""

  graphviz = "!f() { echo 'digraph git {' ; git log --pretty='format:  %h -> { %p }' \"$@\" | sed 's/[0-9a-f][0-9a-f]*/\"&\"/g' ; echo '}'; }; f"

[push]
	default = tracking
[diff]
	mnemonicprefix = true
[credential]
	helper = osxkeychain
